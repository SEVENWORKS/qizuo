<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.qizuo.provider.model.dao.FileLogDao">
    <!-- 专属字段 -->
    <sql id="exclusiveColumns">
        <include refid="CommonColumns.commonColumns"/>,
        a.DATA_TYPE as "dataType",
        a.DATA_ID as "dataId",
        a.DATA_COLUMN as "dataColumn",
        a.RESOURCE_NAME as "resourceName",
        a.NAME as "name",
        a.UPLOAD_RESULT as "uploadResult"
    </sql>
    <!-- 插入 -->
    <insert id="insert">
        insert into sys_upload_log
        (
        BASE_ID,
        BASE_CREATE_USER_ID,
        BASE_CREATE_TM,
        BASE_STATUS,
        BASE_REMARKS,
        BASE_CREATE_IP,
        DATA_TYPE,
        DATA_ID,
        DATA_COLUMN,
        RESOURCE_NAME,
        NAME,
        UPLOAD_RESULT
        )
        values
        (
        #{baseId},
        #{baseCreateUserId},
        now(),
        #{baseStatus},
        #{baseRemarks},
        #{baseCreateIp},
        #{dataType},
        #{dataId},
        #{dataColumn},
        #{resourceName},
        #{name},
        #{uploadResult}
        )
    </insert>
    <!-- 修改 -->
    <update id="update">
        update sys_upload_log set
        BASE_UPDATE_USER_ID=#{baseUpdateUserId},
        BASE_UPDATE_TM=now(),
        BASE_REMARKS=#{baseRemarks},
        BASE_UPDATE_IP=#{baseUpdateIp},
        DATA_TYPE=#{dataType},
        DATA_ID=#{dataId},
        DATA_COLUMN=#{dataColumn},
        RESOURCE_NAME=#{resourceName},
        UPLOAD_RESULT=#{uploadResult}
        where BASE_ID=#{baseId}
    </update>
    <!-- 删除 -->
    <delete id="delete">
        delete from sys_upload_log where BASE_ID=#{baseId}
    </delete>
    <!-- 查找单个 -->
    <select id="query" resultType="com.qizuo.provider.model.po.FileLogPoJo">
        select
        <include refid="exclusiveColumns"/>
        from sys_upload_log a
        <where>
            a.BASE_ID=#{baseId}
            and a.BASE_STATUS=0
        </where>
        limit 1
    </select>
    <!-- 查找列表 -->
    <select id="qList" resultType="com.qizuo.provider.model.po.FileLogPoJo">
        select
        <include refid="exclusiveColumns"/>
        from sys_upload_log a
        <where>
            and a.BASE_STATUS=0
        </where>
        <if test="orderBy != null and orderBy != ''">
            order by ${orderBy}
        </if>
    </select>
    <!-- 查找分页 -->
    <select id="qPageQZ" resultType="com.qizuo.provider.model.po.FileLogPoJo">
        select
        <include refid="exclusiveColumns"/>
        from sys_upload_log a
        <where>
            and a.BASE_STATUS=0
            <if test="entity != null">

            </if>
        </where>
        <if test="entity.orderBy != null and entity.orderBy != ''">
            order by ${entity.orderBy}
        </if>
    </select>
    <!-- ********************************************************************************************************************** -->
    <!-- 更新状态 -->
    <update id="uStatus">
        update sys_upload_log set BASE_STATUS=#{baseStatus} where BASE_ID=#{baseId}
    </update>
    <!-- 更新日志结果 -->
    <update id="uLogResult">
        update sys_upload_log set UPLOAD_RESULT=#{uploadResult} where BASE_ID=#{baseId}
    </update>
    <!-- 批量插入 -->
    <insert id="iAbatchInsert">
        insert into sys_upload_log
        (
        BASE_ID,
        BASE_CREATE_USER_ID,
        BASE_CREATE_TM,
        BASE_UPDATE_USER_ID,
        BASE_UPDATE_TM,
        BASE_STATUS,
        BASE_REMARKS,
        BASE_CREATE_IP,
        BASE_UPDATE_IP,
        DATA_TYPE,
        DATA_ID,
        DATA_COLUMN,
        RESOURCE_NAME,
        NAME,
        UPLOAD_RESULT
        )
        values
        <foreach collection="fileLogPoJos" separator="," item="item" close="" open="">
            (
            #{baseId},
            #{baseCreateUserId},
            now(),
            #{baseStatus},
            #{baseRemarks},
            #{baseCreateIp},
            #{dataType},
            #{dataId},
            #{dataColumn},
            #{resourceName},
            #{name},
            #{uploadResult}
            )
        </foreach>
    </insert>
</mapper>